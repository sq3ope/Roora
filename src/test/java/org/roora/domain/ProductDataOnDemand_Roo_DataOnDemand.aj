// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.roora.domain;

import java.lang.String;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.roora.domain.Product;
import org.roora.domain.ProductGroup;
import org.roora.domain.ProductGroupDataOnDemand;
import org.roora.domain.Unit;
import org.roora.domain.UnitDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ProductDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ProductDataOnDemand: @Component;
    
    private Random ProductDataOnDemand.rnd = new SecureRandom();
    
    private List<Product> ProductDataOnDemand.data;
    
    @Autowired
    private ProductGroupDataOnDemand ProductDataOnDemand.productGroupDataOnDemand;
    
    @Autowired
    private UnitDataOnDemand ProductDataOnDemand.unitDataOnDemand;
    
    public Product ProductDataOnDemand.getNewTransientProduct(int index) {
        Product obj = new Product();
        setName(obj, index);
        setProductGroup(obj, index);
        setStatus(obj, index);
        setUnit(obj, index);
        return obj;
    }
    
    public void ProductDataOnDemand.setName(Product obj, int index) {
        String name = "name_" + index;
        obj.setName(name);
    }
    
    public void ProductDataOnDemand.setProductGroup(Product obj, int index) {
        ProductGroup productGroup = productGroupDataOnDemand.getRandomProductGroup();
        obj.setProductGroup(productGroup);
    }
    
    public void ProductDataOnDemand.setStatus(Product obj, int index) {
        String status = "status_" + index;
        obj.setStatus(status);
    }
    
    public void ProductDataOnDemand.setUnit(Product obj, int index) {
        Unit unit = unitDataOnDemand.getRandomUnit();
        obj.setUnit(unit);
    }
    
    public Product ProductDataOnDemand.getSpecificProduct(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Product obj = data.get(index);
        return Product.findProduct(obj.getId());
    }
    
    public Product ProductDataOnDemand.getRandomProduct() {
        init();
        Product obj = data.get(rnd.nextInt(data.size()));
        return Product.findProduct(obj.getId());
    }
    
    public boolean ProductDataOnDemand.modifyProduct(Product obj) {
        return false;
    }
    
    public void ProductDataOnDemand.init() {
        data = Product.findProductEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Product' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<org.roora.domain.Product>();
        for (int i = 0; i < 10; i++) {
            Product obj = getNewTransientProduct(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> it = e.getConstraintViolations().iterator(); it.hasNext();) {
                    ConstraintViolation<?> cv = it.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
