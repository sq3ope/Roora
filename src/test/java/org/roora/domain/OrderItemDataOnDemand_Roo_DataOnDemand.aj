// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.roora.domain;

import java.util.List;
import java.util.Random;
import org.roora.domain.MyOrderDataOnDemand;
import org.roora.domain.OrderItem;
import org.roora.domain.ProductDataOnDemand;
import org.roora.domain.UnitDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect OrderItemDataOnDemand_Roo_DataOnDemand {
    
    declare @type: OrderItemDataOnDemand: @Component;
    
    private Random OrderItemDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<OrderItem> OrderItemDataOnDemand.data;
    
    @Autowired
    private UnitDataOnDemand OrderItemDataOnDemand.unitDataOnDemand;
    
    @Autowired
    private MyOrderDataOnDemand OrderItemDataOnDemand.myOrderDataOnDemand;
    
    @Autowired
    private ProductDataOnDemand OrderItemDataOnDemand.productDataOnDemand;
    
    public OrderItem OrderItemDataOnDemand.getNewTransientOrderItem(int index) {
        org.roora.domain.OrderItem obj = new org.roora.domain.OrderItem();
        setQuantity(obj, index);
        setDescription(obj, index);
        setUnit(obj, index);
        setMyOrder(obj, index);
        setProduct(obj, index);
        return obj;
    }
    
    private void OrderItemDataOnDemand.setQuantity(OrderItem obj, int index) {
        java.math.BigDecimal quantity = java.math.BigDecimal.valueOf(index);
        obj.setQuantity(quantity);
    }
    
    private void OrderItemDataOnDemand.setDescription(OrderItem obj, int index) {
        java.lang.String description = "description_" + index;
        obj.setDescription(description);
    }
    
    private void OrderItemDataOnDemand.setUnit(OrderItem obj, int index) {
        org.roora.domain.Unit unit = unitDataOnDemand.getRandomUnit();
        obj.setUnit(unit);
    }
    
    private void OrderItemDataOnDemand.setMyOrder(OrderItem obj, int index) {
        org.roora.domain.MyOrder myOrder = myOrderDataOnDemand.getRandomMyOrder();
        obj.setMyOrder(myOrder);
    }
    
    private void OrderItemDataOnDemand.setProduct(OrderItem obj, int index) {
        org.roora.domain.Product product = productDataOnDemand.getRandomProduct();
        obj.setProduct(product);
    }
    
    public OrderItem OrderItemDataOnDemand.getSpecificOrderItem(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        OrderItem obj = data.get(index);
        return OrderItem.findOrderItem(obj.getId());
    }
    
    public OrderItem OrderItemDataOnDemand.getRandomOrderItem() {
        init();
        OrderItem obj = data.get(rnd.nextInt(data.size()));
        return OrderItem.findOrderItem(obj.getId());
    }
    
    public boolean OrderItemDataOnDemand.modifyOrderItem(OrderItem obj) {
        return false;
    }
    
    public void OrderItemDataOnDemand.init() {
        data = org.roora.domain.OrderItem.findOrderItemEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'OrderItem' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.roora.domain.OrderItem>();
        for (int i = 0; i < 10; i++) {
            org.roora.domain.OrderItem obj = getNewTransientOrderItem(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
